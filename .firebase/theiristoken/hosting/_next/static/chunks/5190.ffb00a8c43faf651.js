"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[5190],{75190:function(t,a,r){r.r(a),r.d(a,{Vote:function(){return l}});var e,o=r(71567),n=r(49242),s=r(2593),c=r(32046),i=r(61744),p=r(64146);let d=((e={})[e.Against=0]="Against",e[e.For=1]="For",e[e.Abstain=2]="Abstain",e);r(13550),r(2162),r(64063),r(77191),r(54146),r(54098);class l{get chainId(){return this._chainId}constructor(t,a,r){let e=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},n=arguments.length>4?arguments[4]:void 0,s=arguments.length>5?arguments[5]:void 0,c=arguments.length>6&&void 0!==arguments[6]?arguments[6]:new o.d4(t,a,n,e,r);this._chainId=s,this.abi=o.e.parse(n||[]),this.contractWrapper=c,this.storage=r,this.metadata=new o.ag(this.contractWrapper,o.dK,this.storage),this.app=new o.a$(this.contractWrapper,this.metadata,this.storage),this.encoder=new o.af(this.contractWrapper),this.estimator=new o.aP(this.contractWrapper),this.events=new o.aQ(this.contractWrapper),this.interceptor=new o.aR(this.contractWrapper)}onNetworkUpdated(t){this.contractWrapper.updateSignerOrProvider(t)}getAddress(){return this.contractWrapper.readContract.address}async get(t){let a=await this.getAll(),r=a.filter(a=>a.proposalId.eq(s.O$.from(t)));if(0===r.length)throw Error("proposal not found");return r[0]}async getAll(){return Promise.all((await this.contractWrapper.readContract.getAllProposals()).map(async t=>({proposalId:t.proposalId,proposer:t.proposer,description:t.description,startBlock:t.startBlock,endBlock:t.endBlock,state:await this.contractWrapper.readContract.state(t.proposalId),votes:await this.getProposalVotes(t.proposalId),executions:t[3].map((a,r)=>({toAddress:t.targets[r],nativeTokenValue:a,transactionData:t.calldatas[r]}))})))}async getProposalVotes(t){let a=await this.contractWrapper.readContract.proposalVotes(t);return[{type:d.Against,label:"Against",count:a.againstVotes},{type:d.For,label:"For",count:a.forVotes},{type:d.Abstain,label:"Abstain",count:a.abstainVotes}]}async hasVoted(t,a){return a||(a=await this.contractWrapper.getSignerAddress()),this.contractWrapper.readContract.hasVoted(t,await (0,o.cq)(a))}async canExecute(t){await this.ensureExists(t);let a=await this.get(t),r=a.executions.map(t=>t.toAddress),e=a.executions.map(t=>t.nativeTokenValue),o=a.executions.map(t=>t.transactionData),n=c.id(a.description);try{return await this.contractWrapper.callStatic().execute(r,e,o,n),!0}catch(t){return!1}}async balance(){let t=await this.contractWrapper.readContract.provider.getBalance(this.contractWrapper.readContract.address);return{name:"",symbol:"",decimals:18,value:t,displayValue:i.formatUnits(t,18)}}async balanceOfToken(t){let a=new p.CH(await (0,o.cq)(t),n,this.contractWrapper.getProvider());return await (0,o.bb)(this.contractWrapper.getProvider(),t,await a.balanceOf(this.contractWrapper.readContract.address))}async ensureExists(t){try{await this.contractWrapper.readContract.state(t)}catch(a){throw Error(`Proposal ${t} not found`)}}async settings(){let[t,a,r,e,n]=await Promise.all([this.contractWrapper.readContract.votingDelay(),this.contractWrapper.readContract.votingPeriod(),this.contractWrapper.readContract.token(),this.contractWrapper.readContract["quorumNumerator()"](),this.contractWrapper.readContract.proposalThreshold()]),s=await (0,o.ba)(this.contractWrapper.getProvider(),r);return{votingDelay:t.toString(),votingPeriod:a.toString(),votingTokenAddress:r,votingTokenMetadata:s,votingQuorumFraction:e.toString(),proposalTokenThreshold:n.toString()}}propose=(0,o.db)(async(t,a)=>{a||(a=[{toAddress:this.contractWrapper.readContract.address,nativeTokenValue:0,transactionData:"0x"}]);let r=a.map(t=>t.toAddress),e=a.map(t=>t.nativeTokenValue),n=a.map(t=>t.transactionData);return o.aV.fromContractWrapper({contractWrapper:this.contractWrapper,method:"propose",args:[r,e,n,t],parse:t=>{let a=this.contractWrapper.parseLogs("ProposalCreated",t?.logs);return{id:a[0].args.proposalId,receipt:t}}})});vote=(0,o.db)((()=>{var t=this;return async function(a,r){let e=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";return await t.ensureExists(a),o.aV.fromContractWrapper({contractWrapper:t.contractWrapper,method:"castVoteWithReason",args:[a,r,e]})}})());execute=(0,o.db)(async t=>{await this.ensureExists(t);let a=await this.get(t),r=a.executions.map(t=>t.toAddress),e=a.executions.map(t=>t.nativeTokenValue),n=a.executions.map(t=>t.transactionData),s=c.id(a.description);return o.aV.fromContractWrapper({contractWrapper:this.contractWrapper,method:"execute",args:[r,e,n,s]})});async prepare(t,a,r){return o.aV.fromContractWrapper({contractWrapper:this.contractWrapper,method:t,args:a,overrides:r})}async call(t,a,r){return this.contractWrapper.call(t,a,r)}}}}]);